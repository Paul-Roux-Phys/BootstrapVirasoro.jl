var documenterSearchIndex = {"docs":
[{"location":"cft_data/#Basic-types","page":"Basic types","title":"Basic types","text":"","category":"section"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The package has a few types to represent objects in a Virasoro CFT:","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"CentralCharges\nConformalDimensions\nFields","category":"page"},{"location":"cft_data/#Central-charges","page":"Basic types","title":"Central charges","text":"","category":"section"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"We parametrise the central charge of our theories in terms of variables c, B, b or β related by","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"c = 13 + 6B + 6 B^-1 quad  quad B = b^2 = -beta^2\nquad B = fracc-13 pm sqrt(c-1)(c-25)12","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"By convention we keep beta = ib. In O(n) and U(n) models the central charge is related to n via","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"n = - 2 cos(pi beta^2)","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The program allows to conveniently create central charges from any of these four parameters, and to retrieve the value of any parameter:","category":"page"},{"location":"cft_data/#BootstrapVirasoro.CentralCharge","page":"Basic types","title":"BootstrapVirasoro.CentralCharge","text":"CentralCharge(param = value)\n\nType representing a central charge, with precision given by the type of value. The supported param are c, β, b, B.\n\nExamples\n\njulia> c = CentralCharge(β=big\"0.1\"+big\"0.2\"*im); c.β ≈ big\"0.1\" + big\"0.2\"*im\ntrue\n\njulia> c = CentralCharge(c = 0.7);\n\njulia> c.b ≈ -0.0 + 0.894427190999916im\ntrue\n\njulia> c.n ≈ 1.6180339887498953 + 0.0im\ntrue\n\n\n\n\n\n","category":"type"},{"location":"cft_data/#Conformal-Dimensions","page":"Basic types","title":"Conformal Dimensions","text":"","category":"section"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"We parametrise the conformal dimensions in terms of variables Delta P p delta, related by","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"Delta = fracc-124 + delta  quad  quad delta = P^2 = -p^2","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The variable P is called the momentum, and Delta is the eigenvalue of the Virasoro generator L_0. By convention, we always keep P=ip. Moreover, we introduce the following parametrisation of dimensions in terms of Kac indices r s:","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"P_(rs)=frac12(beta r - beta^-1s)","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"where rs are arbitrary numbers. This convention is different from the one in Sylvain\\'s code, but similar to our more recent conventions, such as in Sylvain's review on solvable CFTs.","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The program lets us define these objects and access the various parametrisations:","category":"page"},{"location":"cft_data/#BootstrapVirasoro.ConformalDimension","page":"Basic types","title":"BootstrapVirasoro.ConformalDimension","text":"ConformalDimension(c; param=value, r=0, s=0)\n\nType representing a conformal dimension, with precision given by the central charge. The supported parameters are Δ, δ, P, p, or the Kac indices r, s.\n\nExamples\n\njulia> c = CentralCharge(β = 0.3im);\n\njulia> d1 = ConformalDimension(c, δ=0.5); d1.Δ ≈ 3.800277777777777 + 0.0im\ntrue\n\njulia> d1.P ≈ 0.7071067811865476\ntrue\n\njulia> d2 = ConformalDimension(c, r=3//2, s=2//3)\nConformalDimension{ComplexF64} with Kac indices r = 3//2, s = 2//3\n\n\n\n\n\n","category":"type"},{"location":"cft_data/#BootstrapVirasoro.P_rs","page":"Basic types","title":"BootstrapVirasoro.P_rs","text":"    P_rs(r, s, β)\n    P_rs(r, s, c)\n\nP_(r s) = 12 * (β r - s  β).\n\n\n\n\n\n","category":"function"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"ConformalDimensions can be shifted by units of beta^-12:","category":"page"},{"location":"cft_data/#BootstrapVirasoro.shift-Tuple{ConformalDimension, Any}","page":"Basic types","title":"BootstrapVirasoro.shift","text":"    shift(d, i)\n\nShift a conformal dimension by s -> s+i or P -> P + i/β\n\n\n\n\n\n","category":"method"},{"location":"cft_data/#Fields","page":"Basic types","title":"Fields","text":"","category":"section"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"For our purposes, a field is the data of left and right conformal dimensions. We denote V_(r s) a field with left and right dimensions (Delta_(r s) Delta_(r -s)).","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The program exposes a Field struct and convenient constructors:","category":"page"},{"location":"cft_data/#BootstrapVirasoro.Field","page":"Basic types","title":"BootstrapVirasoro.Field","text":"Field(c, parameter=value; r, s, diagonal=false)\n\nType for representing a non-chiral field.\n\nkeyword arguments:\n\nr::Rational,s::Rational. By convention V_(rs) has left and right momenta (P_(rs) P_(r-s)).\ndiagonal::Bool: set to true to get a diagonal field;\n\nExamples\n\njulia> c = CentralCharge(β = big\"0.5\");\n\njulia> V = Field(c, r=0, s=1)\nDiagonal Field{Complex{BigFloat}}, dim = Δ_{0, 1}\n\njulia> V.Δ\n(0.4375 + 0.0im, 0.4375 + 0.0im)\n\njulia> V.P[:left] ≈ 1\ntrue\n\njulia> V.p[:right] ≈ -im\ntrue\n\njulia> V2 = Field(c, :P, 0.42, diagonal=true); isdiagonal(V2)\ntrue\n\n\n\n\n\n","category":"type"},{"location":"cft_data/#BootstrapVirasoro.isdiagonal","page":"Basic types","title":"BootstrapVirasoro.isdiagonal","text":"    isdiagonal(V)::Bool\n\nWhether V is a diagonal field.\n\n\n\n\n\n","category":"function"},{"location":"cft_data/#BootstrapVirasoro.isdegenerate","page":"Basic types","title":"BootstrapVirasoro.isdegenerate","text":"    isdegenerate(V)::Bool\n\nWhether V is a degenerate field.\n\n\n\n\n\n","category":"function"},{"location":"cft_data/#BootstrapVirasoro.shift-Tuple{Field, Any}","page":"Basic types","title":"BootstrapVirasoro.shift","text":"    shift(V, i)\n\nShift the field:\n\ns -> s+i if !isdiagonal(V)\nP -> P+i/(2β) if isdiagonal(V)\n\n\n\n\n\n","category":"method"},{"location":"cft_data/#Spectra","page":"Basic types","title":"Spectra","text":"","category":"section"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The program exposes two types to deal with CFT spectra.","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The type Spectrum simply contains a list of conformal dimensions or fields, with conformal dimensions bounded by some Delta_mathrmmax.","category":"page"},{"location":"cft_data/","page":"Basic types","title":"Basic types","text":"The type ChannelSpectrum contains all the data needed to evaluate blocks corresponding to a correlation and a list of channel fields in a given channel.","category":"page"},{"location":"cft_data/#BootstrapVirasoro.Spectrum","page":"Basic types","title":"BootstrapVirasoro.Spectrum","text":"Spectrum(fields, Δmax; interchiral=false)\n\nAbstract type for representing a CFT spectrum.\n\nexamples\n\njulia> c = CentralCharge(β=1/(big\"0.8\"+big\"0.1\"*im));\n\njulia> V1 = Field(c, r=2, s=0);\n\njulia> co = Correlation(V1, Δmax=10.);\n\njulia> fields = [Field(c, r=r, s=s) for r in 2:30 for s in -1+1//r:1//r:1 if r*s% 1 == 0];\n\njulia> s = Spectrum(fields, 10.0)\nNon-diagonal:\n(2, -1//2), (2, 0), (2, 1//2), (2, 1)\n(3, -2//3), (3, -1//3), (3, 0), (3, 1//3), (3, 2//3), (3, 1)\n\njulia> add!(s, Field(c, r=1, s=0)); s\nNon-diagonal:\n(1, 0)\n(2, -1//2), (2, 0), (2, 1//2), (2, 1)\n(3, -2//3), (3, -1//3), (3, 0), (3, 1//3), (3, 2//3), (3, 1)\n\n\n\n\n\n","category":"type"},{"location":"cft_data/#BootstrapVirasoro.ChannelSpectrum","page":"Basic types","title":"BootstrapVirasoro.ChannelSpectrum","text":"    Holds all the data for evaluating blocks in a channel.\n\n\n\n\n\n","category":"type"},{"location":"installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"To install this package, run","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.add(\"https://github.com/Paul-Roux-Phys/BootstrapVirasoro.git\")","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"in a Julia script, or download the code from the repo, put it somewhere where Julia can see the BootstrapVirasoro module and do","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"julia> ]add BootstrapVirasoro","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"in a Julia REPL.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"The module is then accessible via","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using BootstrapVirasoro","category":"page"},{"location":"conformal_blocks/#Correlation-functions-and-conformal-blocks","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The program is capable of computing chiral and non-chiral Virasoro blocks for four-point functions on the sphere and for one-point functions on the torus, by Zamalodchikov's recursive formula.","category":"page"},{"location":"conformal_blocks/#Chiral-blocks-and-Zamolodchikov's-recursion-formula","page":"Correlation functions and conformal blocks","title":"Chiral blocks and Zamolodchikov's recursion formula","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"Blocks can be computed efficiently thanks to Zamolodchikov's recursion.","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"They are expressed as series in a variable q related to x through","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"begincases\nx = fractheta_2(q)^4theta_3(q)^4 quad q = e^-pifracK(1-x) K(x) \n    text for four-point blocks on the sphere \nq = e^2ipi tau text for one-point blocks on the torus\nendcases","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"where","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"theta_3(q) = sum_ninmathbbZ q^n^2 quad \nquad theta_2(q) = 2q^frac14sum_n=0^infty q^n(n+1)","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"are Jacobi special theta-functions, K(x) is the elliptic K function, and tau is the modulus of the torus.","category":"page"},{"location":"conformal_blocks/#BootstrapVirasoro.xfromq","page":"Correlation functions and conformal blocks","title":"BootstrapVirasoro.xfromq","text":"Cross ratio x from the nome q\n\n\n\n\n\n","category":"function"},{"location":"conformal_blocks/#BootstrapVirasoro.qfromx","page":"Correlation functions and conformal blocks","title":"BootstrapVirasoro.qfromx","text":"Nome q from the cross-ratio x\n\n\n\n\n\n","category":"function"},{"location":"conformal_blocks/#Four-point-blocks-on-the-sphere","page":"Correlation functions and conformal blocks","title":"Four-point blocks on the sphere","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"In terms of these variables, the chiral s-channel sphere four point conformal block is","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\nmathcalF^(s)_delta(c  Delta_1 dots Delta_4  x) =\nx^E_0 (1-x)^E_1 theta_3(q)^-4E_2\n(16q)^delta H_delta(c  Delta_1dots Delta_4  q)\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"where we use the exponents","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"E_0 = -delta_1-delta_2-fracc-124 quad  quad E_1 = \n-delta_1-delta_4-fracc-124 quad \nquad E_2 = delta_1+delta_2+delta_3+delta_4+fracc-124","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The non-trivial coefficient is the series","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"H_delta(q) = 1 + sum_N=1^N_max sum_mnleq N C_mn^N\n frac(16q)^Ndelta-delta_(mn)","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"Where the coefficient C_mn^N is defined by the recursive formula","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"C^N_mn = R_mnleft(delta_N-mn0 +\nsum_mnleq N-mn\nfracC^N-mn_mndelta_(m-n)-delta_(mn) right)","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"And the coefficients R_mn can be written","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n R_mn = frac12frac1D_mn\nprod_roverset2= 1-m^m-1\nprod_soverset2=1-n^n-1\nsqrt(delta_2-delta_1)^2 -2delta_(rs)(delta_1+delta_2) + delta_(rs)^2nonumber\nsqrt(delta_3-delta_4)^2 -2delta_(rs)(delta_3+delta_4) + delta_(rs)^2\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"We do not actually take square roots, because each factor appears twice, except the (rs)=(00) factor which is however a perfect square. The normalization factor is","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginequation\nD_mn = mn prod_r=1^m-1 r^2B left(r^2B - fracn^2Bright)\nprod_s=1^n-1 fracs^2Bleft(fracs^2B - m^2Bright)\nprod_r=1^m-1 prod_s=1^n-1 left(r^2B -fracs^2B right)^2\nendequation","category":"page"},{"location":"conformal_blocks/#One-point-blocks-on-the-torus","page":"Correlation functions and conformal blocks","title":"One-point blocks on the torus","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"A similar formula holds for torus one-point blocks:","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n    mathcal F_Delta(tau c Delta_1  x) = fracq^deltaeta(q)\n    H^texttorus_Delta(tau c Delta_1  q)\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The recursion formula for H^texttorus_Delta(tau c Delta_1  q) is","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n  H_Delta^texttorus (tau c Delta_1  q) = 1 + sum_N=1^N_textmax\n  sum C^N texttorus_mn fracq^Ndelta - delta_(mn)\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The coefficients C_mn^Ntexttorus have the recursive representation","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginequation\nC^Ntexttorus_mn = R^texttorus_mnleft(delta_N-mn0 +\nsum_mnleq N-mn fracC^N-mn_mndelta_(m-n)-delta_(mn) right)\nendequation","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"An expression for the R_mn^texttorus can be found on  this wikipedia article. It can be rewritten","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"R_mn^texttorus = frac12 D_mn prod_roverset2=1-2m^2m-1\nprod_soverset2=1-2n^2n-1 sqrtdelta_(rs) - delta_1","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"where we do not actually take square roots, because each factor appears twice. The normalization factor is the same D_mn as in the four-point case.","category":"page"},{"location":"conformal_blocks/#The-Correlation-type","page":"Correlation functions and conformal blocks","title":"The Correlation type","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"To prevent recomputation of the blocks' residues, which are independent on the channel field, the user must create a struct Correlation. If passed one (resp. four) ConformalDimension object(s), and an integer Nmax, the Correlation object will contain all residues of the corresponding blocks, up to order Nmax. The Correlation struct also serves as a convenient way to bundle together external parameters of blocks.","category":"page"},{"location":"conformal_blocks/#BootstrapVirasoro.Correlation","page":"Correlation functions and conformal blocks","title":"BootstrapVirasoro.Correlation","text":"Correlation(args...; Δmax=10.)\n\nAbstract type for holding data relevant to the computation of a correlation function:\n\nexternal fields\nCoefficients R_mn, possibly left and right and for different channels\nCoefficients R^textreg_m n when R_m n vanishes\nCoefficients C^N_m n, possibly left and right and for different channels\n\nup to N=Δmax.\n\nIt is also possible to access the central charge, left or right parts of the correlation if it is non chiral, etc. See examples.\n\nExamples\n\njulia> c = CentralCharge(β = sqrt(2));\n\njulia> V1 = Field(c, r=2, s=3//2);\n\njulia> co = Correlation(V1, V1, V1, V1, 10)\nCorrelationNonChiral{ComplexF64} with external fields\n(V_{(2, 3//2)}, V_{(2, 3//2)}, V_{(2, 3//2)}, V_{(2, 3//2)})\n\njulia> co._Rmn[:left][:s][2, 4] ≈ 8.37053571428573e-7 - 0.0im\ntrue\n\njulia> co.c.c ≈ -2\ntrue\n\njulia> co.fields\n(V_{(2, 3//2)}, V_{(2, 3//2)}, V_{(2, 3//2)}, V_{(2, 3//2)})\n\njulia> co[:left]\nCorrelationChiral{ComplexF64} with external dimensions\n(Δ_{2, 3//2}, Δ_{2, 3//2}, Δ_{2, 3//2}, Δ_{2, 3//2})\n\n\n\n\n\n","category":"type"},{"location":"conformal_blocks/#Regularisation-of-blocks","page":"Correlation functions and conformal blocks","title":"Regularisation of blocks","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The blocks have poles at P=P_(r s) when r s in mathbb N^*. We define regularised block via:","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"mathcal F_P_(r s) undersetP to P_(r s)= fracR_r sP - P_(r s) mathcal F_P_(r -s) + mathcal F^textreg_P_(r s)","category":"page"},{"location":"conformal_blocks/#Logarithmic-blocks","page":"Correlation functions and conformal blocks","title":"Logarithmic blocks","text":"","category":"section"},{"location":"conformal_blocks/#Logarithmic-blocks-on-the-sphere","page":"Correlation functions and conformal blocks","title":"Logarithmic blocks on the sphere","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The expression of logarithmic four-point blocks on the sphere can be found by assuming the holomorphicity of the 4-point function","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n Z(P) = sum_kinmathbbZ D_P+kbeta^-1 leftmathcalF_P+kbeta^-1right^2 +sum_r=1^infty sum_sinfrac1rmathbbZ D_(rs)(P) mathcalG_(rs) \nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The coefficient D_P has a double pole at P_(r-s). The blocks mathcal F_P have a simple pole at P_(rs), and we write","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n  mathcalF_P = fracR_rsP-P_(rs) mathcalF_P_(r-s)\n   + mathcalF^textreg_P_(rs)\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"Explicitly, using Zamolodchikov's recursion, mathcal F^textreg is written as","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n  mathcalF^textreg_P_(rs) = (textprefactor) H^textreg_P_(rs)\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"where the prefactor is the prefactor in Zamolodchikov's recursion, and","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n  H^textreg_P_(rs) = 1 + sum_mn left( frac1P^2_(rs) - P^2_(mn) right)^textreg (16q)^mn R_mn H_P_(m-n)\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"and","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\nleft(  frac(16q)^P^2P^2_(rs) - P^2_(mn) right)^textreg =\n(16q)^P^2 times\nbegincases\nlog 16q - frac14P_(rs)^2 text  if   (mn)=(rs) \nfrac1P^2_(rs) - P^2_(mn) text  otherwise\nendcases\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"Analysing the poles of this expression (there are double poles and simple ones), one arrives at the following expression for the logarithmic blocks: for (r s) in mathbbN^*,","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\nmathcalG_(rs) = (mathcalF_P_(rs)^textreg - R_rs mathcalF^_P_(r-s)) barmathcalF_P_(r-s) + fracR_rsbar R_rs mathcalF_P_(r-s) (barmathcalF_P_(rs)^textreg - barR_rs barmathcalF^_P_(r-s))nonumber \n +R_rs underbraceleft( fracD^_P_(rs)D_P_(rs) - lim_P to P_(r-s) left frac2P-P_(r-s) + fracD_P^D_P right right)_-ell^(1)-_(rs)leftmathcalF_P_(r-s)right^2\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"in which the primes denote derivatives with respect to the momentum P (see arXiv:1503.02067).","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The derivative of the block is","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n  mathcalF_P_(r-s)^ = (textprefactor) H^textder_P_(r-s) quad textwhere quad H^textder_P = 2Plog(16q) H_P + H_P^\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The term ell^(1)-_(rs) can be computed as the order 1 term in the Taylor expansion of","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n  log left( epsilon^2 fracD_P_(r-s)+epsilonD_P_(rs)+epsilon right) = sum_ngeq 0 ell^(n)-_(rs) epsilon^n\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"Explicitly,","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n betaell^(1)-_(rs) = 4sum_j=1-s^s Big psi(-2beta^-1P_(rj)) +psi(2beta^-1P_( r-j)) Big\n -4pi cot(pi s beta^-2) nonumber\n \n -sum_joverset2=1-s^s-1sum_pmpmBig\n psileft(tfrac12-beta^-1(P_( rj)pm P_1pm P_2)right)\n + psileft(tfrac12+beta^-1(P_( rj)pm bar P_1pm bar P_2)right)\n Big nonumber\n \n -sum_joverset2=1-s^s-1sum_pmpmBig\n psileft(tfrac12-beta^-1(P_( rj)pm P_3pm P_4)right)\n + psileft(tfrac12+beta^-1(P_( rj)pm bar P_3pm bar P_4)right)\n Big\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"For (r s) in mathbbN^*, mathcal G_(rs) can actually be non-logarithmic, due to residues R_(rs) and bar R_(rs) vanishing.","category":"page"},{"location":"conformal_blocks/#Logarithmic-blocks-on-the-torus","page":"Correlation functions and conformal blocks","title":"Logarithmic blocks on the torus","text":"","category":"section"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"The argument we used for computing logarithmic blocks on the sphere can be transferred verbatim to the case of one point blocks on the torus. In particular, the expression of the logarithmic block as a residue is also valid for the torus one-point block, if we replace D_P by the corresponding structure constant on the torus, namely","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"beginalign\n  D_P to fracC^textref_PP P_1B_P\nendalign","category":"page"},{"location":"conformal_blocks/","page":"Correlation functions and conformal blocks","title":"Correlation functions and conformal blocks","text":"where P_1 is the momentum of the external field.","category":"page"},{"location":"#BootstrapVirasoro.jl-documentation","page":"Home","title":"BootstrapVirasoro.jl documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the documentation page for the BootstrapVirasoro package. BootstrapVirasoro is a package for doing bootstrap computations in theories with Virasoro symmetry.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Installation\nBasic types\nConformal blocks\nReference","category":"page"}]
}
